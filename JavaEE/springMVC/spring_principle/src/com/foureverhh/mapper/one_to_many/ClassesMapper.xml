<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foureverhh.mapper.one_to_many.ClassesMapper">
    <!--一对多，一个Classes类对应一个List<Students>-->
    <!--n+1次访问数据库-->
    <resultMap type="classes" id="clsMap2">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="teacherName" column="teacherName"/>
        <!--
            collection用于描述集合管理数据的
            property：集合管理数据属性名
            javaType: 集合关联数据属性类型
            ofType: 关联数据对象的真实类型
            select: 关联数据查询语法中需要的参数
            column：关系数据查询语法中需要的参数，
                    多个参数{属性名称prop1(property1)=字段名称col1(column1)，属性名称prop2(property2)=字段名称col2(column2)}
                    数据库的列名或者列标签别名。与传递给resultSet.getString(columnName)的参数名称相同。
                    注意：在处理组合键时，您可以使用column=“{prop1=col1,prop2=col2}”这样的语法，设置多个列名传入到嵌套查询语句。
                        这就会把prop1和prop2设置到目标嵌套选择语句的参数对象中。
        -->
        <collection property="students"
                    javaType="java.util.List"
                    ofType="Students"
                    column="id"
                    select="com.foureverhh.mapper.one_to_many.StudentsMapper.selectStudentsByClass">
        </collection>
    </resultMap>
    <select id="selectAll" resultMap="clsMap2">
        select c.id,c.name,c.teacherName from classes c
    </select>

    <!--一次访问-->
    <resultMap id="clsMap" type="Classes">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="teacherName" property="teacherName"/>
        <collection property="students" ofType="Students" javaType="list">
            <id column="sid" property="id"/>
            <result column="sName" property="name"/>
            <result column="age" property="age"/>
        </collection>
    </resultMap>
    <select id="selectAllClasses" resultMap="clsMap">
        select
            c.id, c.name, c.teacherName
            s.id as sid, s.name as sName, s.age
        from
            classes c
        left join
            studnets s
            on c.id = s.clsid
    </select>
</mapper>